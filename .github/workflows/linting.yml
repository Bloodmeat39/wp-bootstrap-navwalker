name: Lint

on:
  push:
    branches: [ IanDelMar/v5-dev ]
  pull_request:
    branches: [ IanDelMar/v5-dev ]

env:
  php-version: '7.4'

jobs:

  phpcs:

    name: 'Coding Standards with PHP CodeSniffer'

    runs-on: ubuntu-latest

    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ env.php-version }}
        tools: composer, cs2pr
        coverage: none

    - name: Get Composer cache directory
      id: composer-cache
      run: |
        echo "::set-output name=dir::$(composer config cache-files-dir)"
    - uses: actions/cache@v2
      with:
        path: vendor
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-

    - name: Install dependencies
      if: steps.composer-cache.outputs.cache-hit != 'true'
      run: composer install --prefer-dist --no-progress

    - name: Auto fix coding standards
      run: composer phpcs-fix
      continue-on-error: true

    - name: Commit coding standards fixes
      uses: stefanzweifel/git-auto-commit-action@v4.8.0
      with:
        commit_message: Fix coding standards with phpcbf
        branch: ${{ github.head_ref }}

    - name: Check coding standards
      run: composer phpcs-check-checkstyle | cs2pr

  php-compatibility:

    name: 'Compatibility with PHP CodeSniffer'

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ env.php-version }}
        tools: composer, cs2pr
        coverage: none

    - name: Get Composer cache directory
      id: composer-cache
      uses: actions/cache@v2
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      if: steps.composer-cache.outputs.cache-hit != 'true'
      run: composer install --prefer-dist --no-progress

    - name: Check PHP compatibility
      run: composer phpcs-compat-checkstyle

  php-lint:

    name: 'Syntax with PHP Parallel Lint'

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Get Composer cache directory
      id: composer-cache
      uses: actions/cache@v2
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      if: steps.composer-cache.outputs.cache-hit != 'true'
      run: composer install --prefer-dist --no-progress

    - name: Check syntax
      run: composer php-lint

  phpstan:

    name: 'Static Analysis with PHPStan'

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ env.php-version }}
        tools: composer, cs2pr
        coverage: none

    - name: Get Composer cache directory
      id: composer-cache
      uses: actions/cache@v2
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      if: steps.composer-cache.outputs.cache-hit != 'true'
      run: composer install --prefer-dist --no-progress

    - name: Static Analysis
      run: composer phpstan | cs2pr

  phpmd:

    name: 'Mess Detection with PHPMD'

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Get Composer cache directory
      id: composer-cache
      uses: actions/cache@v2
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      if: steps.composer-cache.outputs.cache-hit != 'true'
      run: composer install --prefer-dist --no-progress

    - name: Detect mess
      run: composer phpmd

  phpcpd:

    name: 'Copy/Paste Detection with PHPCPD'

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ env.php-version }}
        tools: composer, phpcpd
        coverage: none

    - name: Detect copy/paste
      run: phpcpd ./class-wp-bootstrap-navwalker.php
